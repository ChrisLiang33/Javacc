/* Generated By:JavaCC: Do not edit this line. arithexprConstants.java */

/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface arithexprConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LPAREN = 6;
  /** RegularExpression Id. */
  int RPAREN = 7;
  /** RegularExpression Id. */
  int ADD_OP = 8;
  /** RegularExpression Id. */
  int MULT_OP = 9;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 10;
  /** RegularExpression Id. */
  int CLASS = 11;
  /** RegularExpression Id. */
  int IF = 12;
  /** RegularExpression Id. */
  int ELSE = 13;
  /** RegularExpression Id. */
  int PUBLIC = 14;
  /** RegularExpression Id. */
  int STATIC = 15;
  /** RegularExpression Id. */
  int VOID = 16;
  /** RegularExpression Id. */
  int MAIN = 17;
  /** RegularExpression Id. */
  int THIS = 18;
  /** RegularExpression Id. */
  int DOT = 19;
  /** RegularExpression Id. */
  int WHILE = 20;
  /** RegularExpression Id. */
  int EXTENDS = 21;
  /** RegularExpression Id. */
  int BOOLEAN = 22;
  /** RegularExpression Id. */
  int TRUE = 23;
  /** RegularExpression Id. */
  int FALSE = 24;
  /** RegularExpression Id. */
  int INT = 25;
  /** RegularExpression Id. */
  int LENGTH = 26;
  /** RegularExpression Id. */
  int INT_ARRAY = 27;
  /** RegularExpression Id. */
  int NEW = 28;
  /** RegularExpression Id. */
  int NOT = 29;
  /** RegularExpression Id. */
  int EQUALS = 30;
  /** RegularExpression Id. */
  int COMMA = 31;
  /** RegularExpression Id. */
  int RETURN = 32;
  /** RegularExpression Id. */
  int ID = 33;
  /** RegularExpression Id. */
  int NUMBER = 34;
  /** RegularExpression Id. */
  int LBRACKET = 35;
  /** RegularExpression Id. */
  int RBRACKET = 36;
  /** RegularExpression Id. */
  int LCBRACKET = 37;
  /** RegularExpression Id. */
  int RCBRACKET = 38;
  /** RegularExpression Id. */
  int SEMICOLON = 39;
  /** RegularExpression Id. */
  int LESS_THAN = 40;
  /** RegularExpression Id. */
  int AND = 41;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 42;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 43;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\" \"",
    "\"//\"",
    "\"(\"",
    "\")\"",
    "\"+\"",
    "\"*\"",
    "<INTEGER_LITERAL>",
    "\"class\"",
    "\"if\"",
    "\"else\"",
    "\"public\"",
    "\"static\"",
    "\"void\"",
    "\"main\"",
    "\"this\"",
    "\".\"",
    "\"while\"",
    "\"extends\"",
    "\"boolean\"",
    "\"true\"",
    "\"false\"",
    "\"int\"",
    "\"length\"",
    "\"int []\"",
    "\"new\"",
    "\"!\"",
    "\"=\"",
    "\",\"",
    "\"return\"",
    "<ID>",
    "<NUMBER>",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\"<\"",
    "\"&&\"",
    "<SINGLE_LINE_COMMENT>",
    "<MULTI_LINE_COMMENT>",
  };

}
